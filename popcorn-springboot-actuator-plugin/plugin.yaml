schema-version: v2
kind: plugin
metadata:
  name: popcorn-springboot-actuator-plugin
  display-name: Spring Boot Actuator plugin
  description: Habilita microsserviço a expor endpoint de monitoramento e health checking via modulo Spring Boot Actuator
  version: 0.0.1
  picture: plugin.png
spec:
  type: app
  compatibility:
    - python
  about: docs/about.md
  implementation: docs/implementation.md
  release-notes: docs/release-notes-0.0.1.md
  requirements: docs/requirements.md
  single-use: False
  repository: git@github.com:rafaelpontezup/popcorn-studio-treino-1.git
  technologies: # Ref: https://docs.stackspot.com/content-creator/studio/yaml-files/plugin-yaml/#technologies
    - Api
  stk-projects-only: false
  inputs:
    - label: Escolha quais endpoints de monitoramento você quer expor?
      name: actuator_endpoints
      type: multiselect
      required: true
      items:
        - health
        - metrics
        - env
      default: health
      help: Selecione quais endpoints de monitoramento serão expostos pelo Spring Boot Actuator
  computed-inputs:
    actuator_endpoints_joined: "{{ actuator_endpoints | join(',') }}"

  hooks:
    # - type: edit
    #   path: pom.xml
    #   trigger: after-render    
    #   changes:
    #       - search:
    #           string: "</dependencies>"
    #           insert-before:
    #             snippet: snippets/snippet-pom.xml.jinja
    #           when:
    #             not-exists-snippet: snippets/snippet-pom.xml.jinja

    - type: edit-xml
      trigger: after-render 
      path: pom.xml
      encoding: UTF-8
      changes:
        - xpath: .//dependencies
          append:
            snippet: snippets/snippet-pom.xml.jinja
          when:
            not-exists: "./dependencies/dependency/artifactId[.='spring-boot-starter-actuator']/.."
    
    # - type: edit
    #   path: src/main/resources/application.yaml
    #   trigger: after-render    
    #   changes:
    #       - insert:
    #           line: -1
    #           snippet: snippets/snippet-application.yaml.jinja
    #           when:
    #             not-exists: "management:"

    - type: edit-yaml
      path: src/main/resources/application.yaml
      trigger: after-render
      indent: 4
      encoding: UTF-8
      changes:
          - yamlpath: "$"
            update:
                snippet: snippets/snippet-application.yaml.jinja
            when:
                not-exists: "$.management.endpoints"
